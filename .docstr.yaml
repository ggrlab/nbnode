# The following is equivalent to
# docstr-coverage docstr_coverage -e ".*/test" --skip-magic --skip-init --badge="docs" --skip-class-def etc...

# paths: # list or string
#   # - src/nbnode
# --badge=<filepath>, -b <filepath> - Generate a docstring coverage percent badge as an SVG saved to a given filepath
badge: docs # Path
exclude: .*/test # regex
verbose: 3 # int (0-4) Also print missing docstrings (function names, class names, etc.)
# Ignore all magic methods (except __init__)
skip_magic: True # Boolean
# Ignore module docstrings (at the top of files)
skip_file_doc: True # Boolean
# Ignore __init__ methods
skip_init: False # Boolean
#  Ignore docstrings of class definitions
skip_class_def: True # Boolean
# Ignore private functions (starting with a single underscore)
skip_private: False # Boolean
#  Follow symlinks
follow_links: True # Boolean
# Exit with code 0 if no Python files are found (default: exit code 1)
accept_empty: True # Boolean
# Fail if under a certain percentage of coverage (default: 100.0)
fail_under: 10 # int
# Output only the overall coverage percentage as a float, silencing all other logging
percentage_only: False # Boolean

# ignore_patterns: # Dict with key/value pairs of file-pattern/node-pattern
#   .*: method_to_ignore_in_all_files
#   FileWhereWeWantToIgnoreAllSpecialMethods: "__.+__"
#   SomeFile:
#     - method_to_ignore1
#     - method_to_ignore2
#     - method_to_ignore3
#   a_very_important_view_file:
#     - "^get$"
#     - "^set$"
#     - "^post$"
#   detect_.*:
#     - "get_val.*"
